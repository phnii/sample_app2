" ".empty?
"".empty?
[].empty?
{}.empty?
s = "foobar"
if s.empty?\
  "the string is empty"\
else\
  "the string is nonempty"\
end
s.nil?
s
k
k.nil?
0.nil?
"".nil?
"".class
nil.class
NilClass.class
Class.class
exit
user = User.new
user.class
user.class.class
user.ancestors
user.supserclass
user.superclass
user
user.class.superclass
user.class.superclass.sucperclass
user.class.superclass.superclass
exit
User.new
user.valid?
user = User.new
user.valid?
user.save
user
user.name = "Paul"
user.email="fumi@gmail.com"
user
User.create(name: "hoa", email: "hoa@email.com")
user.find(2)
User.find(2)
user
user.name.class
user.created_at.class
User.find(3)
User.find!(3)
User.first
User.all
User.all.class
User.all(1)
User.all.length
User.all.get(1)
User.all.find_by(id: 1)
User.all.find_by(id: 1).class
user.update_attribute(:name, "El Fuferino")
user
user.save
exit
user = User.new(name: "", email: "test@test.com")
user.valid?
user.errors
user.errors.full_messages
user.errors.class
user.errors.class.attributes
user.errors.full_messages
user.errors.full_messages.length
user.errors.full_messages[1)
user.errors.full_messages[1]
user.errors.full_messages[0]
user.errors.full_messages.first
user.errors.full_messages.first.class
user.name
user.name.class
user.name.blank?
exit
user = User.new(name:"hoa", email"ff")
user = User.new(name:"hoa", email:"ff")
user.errors
user.errors.class
user.errors.messages
user.errors.messages.class
u2 = User.new(name: "hoa", email:"")
u.valid?
u2.valid?
u2.errors
u2.errors.messages
u2.errors.full_messages
u2.errors.messages[:email]
u2.errors.messages[:email].first
u2.errors.messages[:email].class
exit
%w[foo bar baz]
address = %w[USER@foo.COM THE_US-ER@foo.bar.org first.last@foo.jp]
address.each do |address|\
  puts address\
end
exit
user = User.find(1)
user.attributes
user
user = User.find(1)
User.all
exit
rails  c
n
User.create(name: "Michael Hartl", email: "michael@example.com", password: "foobar", password_confirmation: "foobar")
User.first
user = User.first
user.attributes
user.attributes.to_yaml
y user.attributes
exit
flash = {success: "It worked!", danger: "it failed."}
flash.each do |key, value|\
  puts "#{key}"\
  puts "#{value}"\
end
exit
